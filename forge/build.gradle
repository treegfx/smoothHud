buildscript {
    repositories {
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
}

apply plugin: 'org.spongepowered.mixin'

group = "dev.smoothhud"
version = "forge"

base {
    archivesName = "smoothhud"
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(21)
}

minecraft {
    mappings channel: "official", version: "1.21.1"

    reobf = false

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
        }

        client {
            property 'forge.enabledGameTestNamespaces', "smoothhud"
        }
    }
}

mixin {
    add sourceSets.main, "smoothhud.refmap.json"

    config "smoothhud.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
}

dependencies {
    minecraft "net.minecraftforge:forge:1.21.1-52.0.40"

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    implementation('net.sf.jopt-simple:jopt-simple:5.0.4') { version { strictly '5.0.4' } }
    implementation project(':common')
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [minecraft_version   : "1.21.1", minecraft_version_range: "[1.21.1,1.22)",
                             forge_version       : "52.0.40", forge_version_range: "[52,)[52,)",
                             loader_version_range: "[52,)",
                             mod_id              : "smoothhud", mod_name: "SmoothHud", mod_license: "MIT", mod_version: "1.0",
                             mod_authors         : "treegfx", mod_description: "",]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes(["Specification-Title"     : "smoothhud",
                    "Specification-Vendor"    : "treegfx",
                    "Specification-Version"   : "1",
                    "Implementation-Title"    : project.name,
                    "Implementation-Version"  : project.jar.archiveVersion,
                    "Implementation-Vendor"   : "treegfx",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")])
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

sourceSets.each {
    def dir = layout.buildDirectory.dir("sourcesSets/$it.name")
    it.output.resourcesDir = dir
    it.java.destinationDirectory = dir
}
